name: Build Electron App

on:
  release:
    types: [created]

jobs:
  build:
    name: Build cross-platform
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Install Linux build dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libx11-dev libxkbfile-dev libsecret-1-dev fakeroot rpm

      - name: Build Windows
        if: matrix.os == 'windows-latest'
        env:
              GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run dist -- -w

      - name: Build Linux
        if: matrix.os == 'ubuntu-latest'
        env:
              GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run dist -- -l

      - name: Rename Windows installer
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          mv dist/*.exe dist/TruckQueue-Lite-Windows.exe

      - name: Rename Linux installer
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          mv dist/*.AppImage dist/TruckQueue-Lite-Linux.AppImage
          
      - name: Upload Windows artifact
        if: github.event_name == 'release' && matrix.os == 'windows-latest'
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux artifact
        if: github.event_name == 'release' && matrix.os == 'ubuntu-latest'
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
